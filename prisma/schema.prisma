
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  passwordHash  String
  role          Role      @default(MEMBER)
  bookings      Booking[]
  trainerProfile Trainer? // User can have a trainer profile (one-to-one)

  @@index([email])
}

model Trainer {
  id          String     @id @default(cuid())
  name        String     // Added: Publicly displayed name for the trainer
  specialty   String
  imageUrl    String?
  userId      String     @unique // Link to the User model
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade) // If User is deleted, Trainer profile is also deleted
  classes     GymClass[]
}

model GymClass {
  id           String    @id @default(cuid())
  serviceTitle String
  dayOfWeek    DayOfWeek
  startTime    String // Format "HH:mm"
  endTime      String // Format "HH:mm"
  capacity     Int
  trainerId    String
  trainer      Trainer   @relation(fields: [trainerId], references: [id], onDelete: Restrict) // Prevent deleting trainer if they have classes
  bookings     Booking[]

  @@index([trainerId])
}

model Booking {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade) // If User is deleted, their bookings are also deleted
  classId     String
  class       GymClass @relation(fields: [classId], references: [id], onDelete: Cascade) // If Class is deleted, bookings for it are also deleted
  bookingTime DateTime @default(now())

  @@unique([userId, classId]) // A user can only book a specific class once
  @@index([userId])
  @@index([classId])
}

enum Role {
  MEMBER
  TRAINER
  ADMIN
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
