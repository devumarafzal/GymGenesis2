
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  passwordHash  String
  role          Role      @default(MEMBER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
  trainerProfile Trainer? // Optional: A user might be a trainer

  @@index([email])
}

model Trainer {
  id        String     @id @default(cuid())
  name      String // Publicly displayed trainer name
  specialty String
  imageUrl  String
  userId    String     @unique // Link to the User model for login, etc.
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  classes   GymClass[]

  @@index([userId])
}

model GymClass {
  id            String    @id @default(cuid())
  serviceTitle  String
  dayOfWeek     DayOfWeek
  startTime     String // Format "HH:mm"
  endTime       String // Format "HH:mm"
  capacity      Int
  trainerId     String?   // A class might temporarily have no trainer
  trainer       Trainer?  @relation(fields: [trainerId], references: [id], onDelete: SetNull)
  bookings      Booking[]

  @@index([trainerId])
  @@index([dayOfWeek])
}

model Booking {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  classId     String
  gymClass    GymClass @relation(fields: [classId], references: [id], onDelete: Cascade)
  bookingTime DateTime @default(now())

  @@unique([userId, classId]) // A user can book a specific class only once
  @@index([userId])
  @@index([classId])
}

enum Role {
  MEMBER
  TRAINER
  ADMIN
}

enum DayOfWeek {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}
